/*------------Color------------*/
$gray: #2B3A53;
/*=============================*/


/*------------Mixins-----------*/

// Prevents highlighting -- Used for UI elements to prevent accidental highlighting
@mixin ui {
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

// Resets factory standard UI styles -- Used to un-style input elements to re-style across all browsers
@mixin reset-appearance {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}

// Prefixed filter style for adjusting element brightness -- Included for cross-browser compatability
@mixin brightness($value) {
	-webkit-filter: brightness($value);
	filter: brightness($value);
}

// Prefixed mixin for altering input placeholder color -- Needed for cross-browser compatability
@mixin placeholder($color) {
	&::-webkit-input-placeholder { color: $color; }
	&::-moz-placeholder { color: $color; }
	&:-ms-input-placeholder { color: $color; }
	&:-moz-placeholder { color: $color; }
}

// One-line solution to position an element -- Valid positions: absolute, fixed, sticky
@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $margin: null) {
	position: $position;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
	margin: $margin;
}

// One-line solution to make an element a flexbox -- Mostly used to vertically center elements (align-items: center) and/or space elements evenly apart (justify-content: space-between)
@mixin flexbox($align-items: null, $justify-content: null, $flex-direction: null, $flex-wrap: null) {
	display: flex;
	align-items: $align-items;
	justify-content: $justify-content;
	flex-direction: $flex-direction;
	flex-wrap: $flex-wrap;
}

// One-line solution to style typography -- Used primarily in ./style/typography.scss
@mixin typography($family, $size, $weight, $line-height: null, $letter-spacing: null, $text-transform: null) {
	font-family: $family;
	font-size: $size;
	font-weight: $weight;
	line-height: $line-height;
	text-transform: $text-transform;
	letter-spacing: $letter-spacing;
}
/*=============================*/


/*----------Typography---------*/

// Sample font import
@font-face {
	src: url();
	font-family: 'Font Family';
}

// Root typography styles
body {

	// Global header reset
	h1, h2, h3, h4, h5, h6, strong, p { margin: 0; }

	// Base font
	@include typography('Font Family', 20px, normal, 28px, 0.5px, null);

	// Header styles -- Font, size, weight, line-height, letter-spacing, text-transform
	h1 { @include typography('Font Family', 54px, bold, 54px, 2px, null); }
	h2 { @include typography('Font Family', 36px, normal, 55px, 0.75px, null); }
	h3 { @include typography('Font Family', 32px, bold, 38px, 0.5px, null); }
	h4 { @include typography('Font Family', 24px, 600, 28px, 0.5px); }
	h5 { @include typography('Font Family', 18px, 500, 24px, 0.5px, null); }
	h6 { @include typography('Font Family', 16px, normal, 24px, 0.5px, null); }

	// Form labels
	label { @include typography('Font Family', 18px, 400, 21px); }

	// Small text (w/ class variant)
	small, .small { @include typography('Font Family', 16px, 300, 24px, 0.5px, null); }
}
/*=============================*/


/*------------Layout-----------*/

// Basic classes for text alignment
.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }

// Universal wall-to-wall flex row
.bridge {
	@include flexbox(center, space-between);
	width: 100%;
	text-align: center;
	> * {
		flex: 1;
		&:first-child { text-align: left; }
		&:last-child { text-align: right; }
	}
}
/*=============================*/


/*---------UI Elements---------*/

// Prevents default outline on focused input elements and standardizes box-sizing
* {
	outline: none;
	box-sizing: border-box;
	&:hover, &:active, &:focus {
		outline: none !important;
	}
}

// Universal easing on UI elements and adds a pointer to interactive elements
a, button, .button, input[type="submit"], .interactive {
	text-decoration: none;
	cursor: pointer;
	transition: all 0.3s;
	&:hover {
		@include brightness(85%);
		text-decoration: none;
	}
}

// Basic classes for (un)styling lists
ul {
	&.unstyled {
		list-style-type: none;
		padding: 0;
	}
	&.inline {
		list-style-type: none;
		li { display: inline-block; }
	}
}
/*=============================*/


/*--------Media Queries--------*/

// Standard mobile-first breakpoints

// Up to phone size
@media (min-width : 768px) {

}

// Up to tablet size
@media (min-width : 992px) {

}

// Up to desktop size
@media (min-width : 1200px) {

}
// Up to TV size
@media (min-width: 1800px) {
	
}
/*=============================*/
